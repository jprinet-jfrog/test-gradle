name: "Gradle Enterprise Build Scan Upload"

on:
  workflow_call:
    inputs:
      build-run-id:
        description: "Build Workflow Run Id"
        type: string
      build-pr:
        description: "Build PR Number"
        type: string
    secrets:
      GRADLE_ENTERPRISE_ACCESS_KEY:
        required: true

jobs:
  build-scan-upload:
    runs-on: ubuntu-latest
    steps:
      - name: Download Build Metadata
        uses: dawidd6/action-download-artifact@v2
        with:
          run_id: ${{ github.event.workflow_run.id }}
      - name: Init environment
        # Required as $HOME is not expanded in a classical env section
        id: init-env
        run: |
          BUILD_TOOL_HOME=".gradle"
          BUILD_METADATA_DIR="build-metadata-gradle-*"
          BUILD_SCAN_DATA_DIR="$HOME/$BUILD_TOOL_HOME/build-scan-data"
          
          echo "BUILD_SCAN_DATA_DIR=$BUILD_SCAN_DATA_DIR" >> $GITHUB_ENV
          echo "BUILD_METADATA_DIR=$BUILD_METADATA_DIR" >> $GITHUB_ENV
          
          mkdir -p $BUILD_SCAN_DATA_DIR
      - name: Restore Build Metadata
        run: |
          # cp --backup=numbered allows to avoid error with duplicates "cp: will not overwrite just-created <filename> with <sameFilename>"
          cp -r --backup=numbered $BUILD_METADATA_DIR/* $BUILD_SCAN_DATA_DIR
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'
      - name: Set up Gradle
        uses: gradle/gradle-build-action@v2
      - name: Publish build scan
        id: publish
        run: |
          # Do not fail the step in case of error as (gradlew buildScanPublishPrevious || true) does not work
          set +e
          
          scanlinks=""
          nbScans=$(find $BUILD_SCAN_DATA_DIR/*/previous/* -type d | wc -l)
          
          cd ${{ inputs.project-basedir }}
          
          for ((i=1; i <= $nbScans; i++))
          do
            echo "BUILD SCAN PUBLICATION $i/$nbScans"
            gradle buildScanPublishPrevious | tee build.out
          
            scanLink=$(grep -A1 "Publishing build scan..." build.out  | tail -n 1  | sed 's/\[INFO\] //')
            if [[ ! -z "$scanLink" ]]
            then
              echo "Found scan link $scanLink"
              scanlinks="${scanlinks}<br>[Gradle Enterprise Build ScanÂ® $i]($scanLink)"
            fi
          done
          echo "scanlinks=$scanlinks" >> $GITHUB_OUTPUT
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
      - name: Comment PR
        uses: actions/github-script@v6
        env:
          pr: ${{ steps.init-env.outputs.pr }}
          scanlinks: ${{ steps.publish.outputs.scanlinks }}
        with:
          script: |
            const prNumber = Number(process.env.pr);
            const message = process.env.scanlinks;
            
            if(message.length > 0) {
              github.rest.issues.createComment({
                issue_number: prNumber,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: message
              });
            }

