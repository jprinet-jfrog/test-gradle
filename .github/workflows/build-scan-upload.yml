name: PR Build Scan Upload

on:
  workflow_run:
    workflows: [ "PR Build" ]
    types: [ completed ]
  issue_comment:
    types: [ created ]
#  pull_request_target:
#    types: [ opened,closed,synchronize ]

jobs:
  init:
    runs-on: ubuntu-latest
    outputs:
      EVENT_NAME: ${{ steps.collect-github-inputs.outputs.EVENT_NAME }}
      RUN_ID: ${{ steps.collect-github-inputs.outputs.RUN_ID }}
      SHA: ${{ steps.collect-github-inputs.outputs.SHA }}
      PR: ${{ steps.collect-github-inputs.outputs.PR }}
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          echo "$GITHUB_CONTEXT"
#      - name: Download Build Metadata
#        uses: dawidd6/action-download-artifact@v2
#        with:
#          name: build-metadata-${{ github.event.issue.number }}-${{ github.sha }}
#      - name: Collect workflow inputs
#        env:
#          eventName: ${{ github.event_name }}
#          runId: ${{ github.event.workflow_run.id }}
#          sha: ${{ github.sha }}
#          pr: ${{ github.event.issue.number }}
#        uses: actions/github-script@v3
#        with:
#          script: |
#            let pr = ''
#            if(eventName == 'issue_comment') {
#              pr = process.env.pr
#            } else if(eventName == 'workflow_run') {
#
#            }
#
#            await github.issues.createComment({
#              issue_number: process.env.issue_id,
#              owner: context.repo.owner,
#              repo: context.repo.repo,
#              body: 'Something went wrong setting up the job.\n\n'
#              + 'Refer to the logs at ' + process.env.run_url,
#            })
#6049685535
#6049693642

      #6049685535
      - name: Collect workflow inputs
        id: collect-github-inputs
        run: |
          EVENT_NAME=${{ github.event_name }}
          RUN_ID=${{ github.event.workflow_run.id }}
          SHA=${{ github.sha }}
          PR=${{ github.event.issue.number }}

          if


          echo "EVENT_NAME=$EVENT_NAME" >> "$GITHUB_OUTPUT"
          echo "RUN_ID=$RUN_ID" >> "$GITHUB_OUTPUT"
          echo "SHA=$SHA" >> "$GITHUB_OUTPUT"
          echo "PR=$PR" >> "$GITHUB_OUTPUT"
          echo $EVENT_NAME > workflow.properties
          echo $RUN_ID >> workflow.properties
          echo $SHA >> workflow.properties
          echo $PR >> workflow.properties
          cat workflow.properties
#      - name: Save workflow inputs
#        uses: actions/upload-artifact@v3
#        with:
#          name: workflow-inputs-${{ inputs.build-tool }}-${{ steps.set-env.outputs.uuid }}
#          path: |
#            ~/build-metadata/${{ inputs.build-tool }}

  consume:
    runs-on: ubuntu-latest
    needs: init
    steps:
      - run: |
          echo "event = $EVENT_NAME"
          echo "run id = $RUN_ID"
          echo "sha = $SHA"
          echo "pr = $PR"
        env:
          EVENT_NAME: ${{ needs.init.outputs.EVENT_NAME }}
          RUN_ID: ${{ needs.init.outputs.RUN_ID }}
          SHA: ${{ needs.init.outputs.SHA }}
          PR: ${{ needs.init.outputs.PR }}

          

  GE-TOS:
    uses: jprinet/test-gradle/.github/workflows/reusable-build-scan-tos.yml@v1
    needs: init
    with:
      path-to-document: 'https://gradle.com/legal/gradle-enterprise-software-agreement/'
    secrets: inherit

#  publish-gradle-build-scans:
#    uses: jprinet/test-gradle/.github/workflows/reusable-build-scan-upload-gradle.yml@v1
#    secrets: inherit
  publish-maven-build-scans:
    uses: jprinet/test-gradle/.github/workflows/reusable-build-scan-upload-maven.yml@v1
    secrets: inherit
