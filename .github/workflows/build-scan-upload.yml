name: PR Build Scan Upload

on:
  workflow_run:
    workflows: [ "PR Build" ]
    types: [ completed ]
  issue_comment:
    types: [ created ]
#  pull_request_target:
#    types: [ opened,closed,synchronize ]

jobs:
  init:
    runs-on: ubuntu-latest
    outputs:
      github-event-name: ${{ steps.collect-github-inputs.outputs.github-event-name }}
      github-workflow-run-id: ${{ steps.collect-github-inputs.outputs.github-workflow-run-id }}
      github-sha: ${{ steps.collect-github-inputs.outputs.github-sha }}
      github-pr: ${{ steps.collect-github-inputs.outputs.github-pr }}
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          echo "$GITHUB_CONTEXT"
      - name: Collect workflow inputs
        id: collect-github-inputs
        run: |
          echo ${{ github.event_name }}
          EVENT_NAME=${{ github.event_name }}
          RUN_ID=${{ github.event.workflow_run.id }}
          echo "EVENT_NAME=$EVENT_NAME" >> "$GITHUB_OUTPUT"
          echo "RUN_ID=$RUN_ID" >> "$GITHUB_OUTPUT"
          echo $EVENT_NAME > workflow.properties
          echo $RUN_ID >> workflow.properties
          cat workflow.properties
      - name: Save workflow inputs
        uses: actions/upload-artifact@v3
        with:
          name: workflow-inputs-${{ inputs.build-tool }}-${{ steps.set-env.outputs.uuid }}
          path: |
            ~/build-metadata/${{ inputs.build-tool }}

#          echo "github-sha=${{ github.event.pull_request.head.sha }}" >> "$GITHUB_OUTPUT"
#          echo "github-pr=${{ github.event.number }}" >> "$GITHUB_OUTPUT"
#          echo "github-pr=${{ github.event.issue.number }}" >> "$GITHUB_OUTPUT"

  consume:
    runs-on: ubuntu-latest
    needs: init
    steps:
      - run: |
          echo "event = $EVENT_NAME"
          echo "run id = $RUN_ID"
#          echo "sha = $SHA"
#          echo "pr = $PR"
        env:
          EVENT_NAME: ${{ needs.init.outputs.EVENT_NAME }}
          RUN_ID: ${{ needs.init.outputs.RUN_ID }}
#          SHA: ${{ needs.init.outputs.github-sha }}
#          PR: ${{ needs.init.outputs.github-pr }}

          

  GE-TOS:
    uses: jprinet/test-gradle/.github/workflows/reusable-build-scan-tos.yml@v1
    needs: init
    with:
      path-to-document: 'https://gradle.com/legal/gradle-enterprise-software-agreement/'
    secrets: inherit
    if:

#  publish-gradle-build-scans:
#    uses: jprinet/test-gradle/.github/workflows/reusable-build-scan-upload-gradle.yml@v1
#    secrets: inherit
#  publish-maven-build-scans:
#    uses: jprinet/test-gradle/.github/workflows/reusable-build-scan-upload-maven.yml@v1
#    secrets: inherit
