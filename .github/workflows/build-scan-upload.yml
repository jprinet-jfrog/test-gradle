name: PR Build Scan Upload

on:
    workflow_run:
      workflows: ["PR Build"]
      types: [completed]

concurrency:
    group: pr

jobs:
  verification:
    name: Build Scan Upload
    runs-on: ubuntu-latest
    env:
      BUILD_METADATA_DIR: "build-metadata"
    permissions:
      pull-requests: write
    steps:
      - name: Download Build Metadata
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: build-verification.yml
          workflow_conclusion: completed
      - name: Restore Build Metadata
        env:
          BUILD_SCAN_DATA_DIR: "~/.gradle/build-scan-data/"
        run: |
          ls -ltR ${BUILD_METADATA_DIR}
          mkdir -p ${BUILD_SCAN_DATA_DIR}
          cp -r ${BUILD_METADATA_DIR}/* ${BUILD_SCAN_DATA_DIR}
      - name: Load Build metadata
        id: load-metadata
        run: |
          source ${BUILD_METADATA_DIR}/build.properties
          echo "sha=$(echo ${BUILD_SHA})" >> $GITHUB_OUTPUT
          echo "pr=$(echo ${BUILD_PR})" >> $GITHUB_OUTPUT
      - name: Wait for successful completion of CLA workflow
        uses: actions/github-script@v6
        id: check-cla
        env:
          sha: ${{ steps.load-metadata.outputs.sha }}
          pr: ${{ steps.load-metadata.outputs.pr }}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          result-encoding: string
          script: |
            const delay = ms => new Promise(resolve => setTimeout(resolve, ms));
            console.log('Polling CLA check...');
            // we should have only the last result
            for(let i = 1; i < 10; i++, await delay(15000)) {
              console.log('Attempt ' + i);
              const checkRuns = await github.request('GET /repos/${{ github.repository }}/commits/{ref}/check-runs', {
                ref: process.env.sha,
                per_page: 1
              });
              // we should have only the last result
              for await (const cr of checkRuns.data.check_runs) {
                if(cr.conclusion == 'success') {
                  console.log('Successful execution found completed at ' + cr.completed_at);
                  return "true";
                }
              }
            }
            return "false";
      - name: Fail job if CLA are not agreed
        run: exit 1
        if: ${{ steps.check-cla.outputs.result }} == "false"
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'
      - name: Set up Gradle
        uses: gradle/gradle-build-action@v2
      - name: Publish build scan
        run: ./gradlew buildScanPublishPrevious | tee build.out
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GE_SOLUTIONS_ACCESS_TOKEN }}
      - name: Capture Build Scan link
        id: capture-scan-link
        run: |
          echo "scan-link=$(grep -A1 "Publishing build scan..." build.out  | tail -n 1)" >> $GITHUB_OUTPUT
      - name: Comment PR
        uses: actions/github-script@v6
        env:
          pr: ${{ steps.load-metadata.outputs.pr }}
          scan-link: ${{ steps.capture-scan-link.outputs.scan-link }}
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: process.env.pr,
              owner: context.owner,
              repo: context.repo,
              body: `[Build ScanÂ®](${process.env.scan-link})`
            })
